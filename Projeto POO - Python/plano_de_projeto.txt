Ideia do Projeto:

Criar um sistema de Filmes, de modo a aplicar o paradigma de Programação Orientada a Objetos (POO) + Manipulação de Arquivos + API (Consumo e Criação) 

- Criar um ambiente virtual para isolar as dependências
- Criar classes para cada categoria de streaming. Ex: Filmes, Séries, Documentários
- Utilizar arquivos json para guardar e enviar dados
- Utilizar o FastAPI para criar a API, assim como desenvolver uma API mais robusta

Bibliotecas e dependências uitilizadas:
    - Requests (Fazer requisições HTTP)
    - FastAPI (Criação e desenvolvimento de API's)
    - Uvicorn (Subir um servidor)


Função menu:
    - 1: Cadastro
    - 2: Login
    - 3: Listar todos os títulos em catálogo
    - 4: Sugerir um título ao catálogo
    - 5: Avaliar um título do catálogo
    - 6: Acrescentar a lista de desejos/espera
    - 7: Exibir o tempo de maratona para assistir todos os filmes da lista de desejo


Estrutura de um usuário em dicionário = {"marcferp221": {"nome_completo": "Márcio Ferreira Pereira",
                                                            "email(s)": [marciofp@gmail.com, marcioferper@outlook.com.br],
                                                            "senha": "mFp@12rr",
                                                            "telefone(s)": [11712373804, 11 98878-6712],
                                                            "localizacao": 01001000}}

Cadastro de usuário(requisitos): 
    - Nome de usuário
    - Nome completo
    - e-mail(s)
    - senha
    - Telefone(s)
    - CEP


Estrutura da classe abstrata Titulo:
    Recebe como atributos:
        - Nome
        - Ano de Lançamento
        - Tempo de Duração em Minutos
        - Categoria/Gênero
        - Sinopse
    Possui como métodos abstratos:
        - Função avaliar: Exige que toda classe que herda de Titulo possa ser avaliada
        - Função getclassificacao: Exige que toda classe que herda de Titulo possa acessar a nota que o filme teria
    

Estrutura da classe Filme que herda de Titulo:
    Recebe como atributos:
        - Todas os atributos de Titulo
        - Diretor
        - Studio
    Possui como funções:
        - Função __str__: Função especial do Python que retorna uma representação em string do objeto
        - Função avaliar: Função que permite o usuário atribuir uma nota ao filme
        - Função getclassificacao: Função que apresenta a nota de um filme ao usuário com base na média de avaliações
        - Método da clase listar_filmes: Função que exibe todos os filmes presentes no catálogo e que estão armazenados em uma lista da classe


Estrutura da classe Serie que herda de Titulo
    Recebe como atributos:
        - Todas os atributos de Titulo
        - Número de temporadas
        - Número de episódios por temporada
    Possui como funções:
        - Função __str__: Função especial do Python que retorna uma representação em string do objeto
        - Função avaliar: Função que permite o usuário atribuir uma nota ao série
        - Função getclassificacao: Função que apresenta a nota de um série ao usuário com base na média de avaliações
        - Método da clase listar_filmes: Função que exibe todos as séries presentes no catálogo e que estão armazenados em uma lista da classe
